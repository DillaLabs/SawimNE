apply plugin: 'com.android.application'
apply plugin: 'io.fabric'
apply plugin: 'realm-android'

buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        // The Fabric Gradle plugin uses an open ended version to react
        // quickly to Android tooling updates
        classpath 'io.fabric.tools:gradle:1.+'
    }
}

repositories {
    maven { url 'https://maven.fabric.io/public' }
}

dependencies {
    compile 'com.github.ge0rg:MemorizingTrustManager:b6a3d558e4'
    compile 'com.android.support:appcompat-v7:24.2.1'
    compile 'com.github.anrwatchdog:anrwatchdog:1.2.+'
    compile 'com.android.support:design:24.2.1'
    compile 'com.android.support:recyclerview-v7:24.2.1'

    compile 'com.github.bumptech.glide:glide:3.7.0'

    compile 'com.squareup.okhttp3:okhttp:3.2.0'

    compile 'com.google.android.gms:play-services-gcm:9.2.1'

    //debugCompile 'com.squareup.leakcanary:leakcanary-android:1.4-beta2'
    //releaseCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.4-beta2'
}

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.3"
    defaultConfig {
        applicationId "ru.sawim.jp"
        minSdkVersion 9
        targetSdkVersion 22
        versionCode 83
        versionName '1.3.8b'
    }
    lintOptions {
        abortOnError true
        checkReleaseBuilds false
        disable 'MissingTranslation'
    }
    // signing config
    if (file("keystore.properties").exists()) {
        Properties props = new Properties()
        props.load(new FileInputStream(file("keystore.properties")))

        signingConfigs {
            sawim {
                storeFile file(props["key.store"])
                storePassword props["key.store.password"]
                keyAlias props["key.alias"]
                keyPassword props["key.alias.password"]
            }
        }

        buildTypes {
            release {
                minifyEnabled false
                proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-android.txt'
                signingConfig signingConfigs.sawim
            }
        }
    }
    applicationVariants.all { variant ->
        println "*********" + variant.description + "**********";
        def apkName = "SawimNE.apk";
        variant.outputs.each { output ->
            output.outputFile = file(apkName)
        }
    }
}
